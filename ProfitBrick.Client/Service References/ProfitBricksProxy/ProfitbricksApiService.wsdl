<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://ws.api.profitbricks.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" name="ProfitbricksApiService" targetNamespace="http://ws.api.profitbricks.com/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema targetNamespace="http://ws.api.profitbricks.com/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="ProfitbricksServiceFault" type="tns:ProfitbricksServiceFault" />
      <xs:element name="activateFirewalls" type="tns:activateFirewalls" />
      <xs:element name="activateFirewallsResponse" type="tns:activateFirewallsResponse" />
      <xs:element name="activateLoadBalancingOnServers" type="tns:activateLoadBalancingOnServers" />
      <xs:element name="activateLoadBalancingOnServersResponse" type="tns:activateLoadBalancingOnServersResponse" />
      <xs:element name="addFirewallRulesToLoadBalancer" type="tns:addFirewallRulesToLoadBalancer" />
      <xs:element name="addFirewallRulesToLoadBalancerResponse" type="tns:addFirewallRulesToLoadBalancerResponse" />
      <xs:element name="addFirewallRulesToNic" type="tns:addFirewallRulesToNic" />
      <xs:element name="addFirewallRulesToNicResponse" type="tns:addFirewallRulesToNicResponse" />
      <xs:element name="addPublicIpToNic" type="tns:addPublicIpToNic" />
      <xs:element name="addPublicIpToNicResponse" type="tns:addPublicIpToNicResponse" />
      <xs:element name="addRomDriveToServer" type="tns:addRomDriveToServer" />
      <xs:element name="addRomDriveToServerResponse" type="tns:addRomDriveToServerResponse" />
      <xs:element name="clearDataCenter" type="tns:clearDataCenter" />
      <xs:element name="clearDataCenterResponse" type="tns:clearDataCenterResponse" />
      <xs:element name="connectStorageRequest" type="tns:connectStorageRequest" />
      <xs:element name="connectStorageToServer" type="tns:connectStorageToServer" />
      <xs:element name="connectStorageToServerResponse" type="tns:connectStorageToServerResponse" />
      <xs:element name="createDataCenter" type="tns:createDataCenter" />
      <xs:element name="createDataCenterRequest" type="tns:createDataCenterRequest" />
      <xs:element name="createDataCenterResponse" type="tns:createDataCenterResponse" />
      <xs:element name="createLbRequest" type="tns:createLbRequest" />
      <xs:element name="createLoadBalancer" type="tns:createLoadBalancer" />
      <xs:element name="createLoadBalancerResponse" type="tns:createLoadBalancerResponse" />
      <xs:element name="createNic" type="tns:createNic" />
      <xs:element name="createNicRequest" type="tns:createNicRequest" />
      <xs:element name="createNicReturn" type="tns:createNicReturn" />
      <xs:element name="createReservePublicIpBlockRequest" type="tns:createReservePublicIpBlockRequest" />
      <xs:element name="createServer" type="tns:createServer" />
      <xs:element name="createServerRequest" type="tns:createServerRequest" />
      <xs:element name="createServerReturn" type="tns:createServerReturn" />
      <xs:element name="createSnapshot" type="tns:createSnapshot" />
      <xs:element name="createSnapshotRequest" type="tns:createSnapshotRequest" />
      <xs:element name="createSnapshotReturn" type="tns:createSnapshotReturn" />
      <xs:element name="createStorage" type="tns:createStorage" />
      <xs:element name="createStorageRequest" type="tns:createStorageRequest" />
      <xs:element name="createStorageReturn" type="tns:createStorageReturn" />
      <xs:element name="deactivateFirewalls" type="tns:deactivateFirewalls" />
      <xs:element name="deactivateFirewallsResponse" type="tns:deactivateFirewallsResponse" />
      <xs:element name="deactivateLoadBalancingOnServers" type="tns:deactivateLoadBalancingOnServers" />
      <xs:element name="deactivateLoadBalancingOnServersResponse" type="tns:deactivateLoadBalancingOnServersResponse" />
      <xs:element name="deleteDataCenter" type="tns:deleteDataCenter" />
      <xs:element name="deleteDataCenterResponse" type="tns:deleteDataCenterResponse" />
      <xs:element name="deleteFirewalls" type="tns:deleteFirewalls" />
      <xs:element name="deleteFirewallsResponse" type="tns:deleteFirewallsResponse" />
      <xs:element name="deleteImage" type="tns:deleteImage" />
      <xs:element name="deleteImageResponse" type="tns:deleteImageResponse" />
      <xs:element name="deleteLoadBalancer" type="tns:deleteLoadBalancer" />
      <xs:element name="deleteLoadBalancerResponse" type="tns:deleteLoadBalancerResponse" />
      <xs:element name="deleteNic" type="tns:deleteNic" />
      <xs:element name="deleteNicResponse" type="tns:deleteNicResponse" />
      <xs:element name="deleteNotifications" type="tns:deleteNotifications" />
      <xs:element name="deleteNotificationsResponse" type="tns:deleteNotificationsResponse" />
      <xs:element name="deleteServer" type="tns:deleteServer" />
      <xs:element name="deleteServerResponse" type="tns:deleteServerResponse" />
      <xs:element name="deleteSnapshot" type="tns:deleteSnapshot" />
      <xs:element name="deleteSnapshotResponse" type="tns:deleteSnapshotResponse" />
      <xs:element name="deleteStorage" type="tns:deleteStorage" />
      <xs:element name="deleteStorageResponse" type="tns:deleteStorageResponse" />
      <xs:element name="deregisterServersOnLoadBalancer" type="tns:deregisterServersOnLoadBalancer" />
      <xs:element name="deregisterServersOnLoadBalancerResponse" type="tns:deregisterServersOnLoadBalancerResponse" />
      <xs:element name="disconnectStorageFromServer" type="tns:disconnectStorageFromServer" />
      <xs:element name="disconnectStorageFromServerResponse" type="tns:disconnectStorageFromServerResponse" />
      <xs:element name="firewallRule" type="tns:firewallRule" />
      <xs:element name="getAllDataCenters" type="tns:getAllDataCenters" />
      <xs:element name="getAllDataCentersResponse" type="tns:getAllDataCentersResponse" />
      <xs:element name="getAllFirewalls" type="tns:getAllFirewalls" />
      <xs:element name="getAllFirewallsResponse" type="tns:getAllFirewallsResponse" />
      <xs:element name="getAllImages" type="tns:getAllImages" />
      <xs:element name="getAllImagesResponse" type="tns:getAllImagesResponse" />
      <xs:element name="getAllLoadBalancers" type="tns:getAllLoadBalancers" />
      <xs:element name="getAllLoadBalancersResponse" type="tns:getAllLoadBalancersResponse" />
      <xs:element name="getAllNic" type="tns:getAllNic" />
      <xs:element name="getAllNicResponse" type="tns:getAllNicResponse" />
      <xs:element name="getAllPublicIpBlocks" type="tns:getAllPublicIpBlocks" />
      <xs:element name="getAllPublicIpBlocksResponse" type="tns:getAllPublicIpBlocksResponse" />
      <xs:element name="getAllServers" type="tns:getAllServers" />
      <xs:element name="getAllServersResponse" type="tns:getAllServersResponse" />
      <xs:element name="getAllSnapshots" type="tns:getAllSnapshots" />
      <xs:element name="getAllSnapshotsResponse" type="tns:getAllSnapshotsResponse" />
      <xs:element name="getAllStorages" type="tns:getAllStorages" />
      <xs:element name="getAllStoragesResponse" type="tns:getAllStoragesResponse" />
      <xs:element name="getDataCenter" type="tns:getDataCenter" />
      <xs:element name="getDataCenterResponse" type="tns:getDataCenterResponse" />
      <xs:element name="getDataCenterState" type="tns:getDataCenterState" />
      <xs:element name="getDataCenterStateResponse" type="tns:getDataCenterStateResponse" />
      <xs:element name="getFirewall" type="tns:getFirewall" />
      <xs:element name="getFirewallResponse" type="tns:getFirewallResponse" />
      <xs:element name="getImage" type="tns:getImage" />
      <xs:element name="getImageResponse" type="tns:getImageResponse" />
      <xs:element name="getLoadBalancer" type="tns:getLoadBalancer" />
      <xs:element name="getLoadBalancerResponse" type="tns:getLoadBalancerResponse" />
      <xs:element name="getNic" type="tns:getNic" />
      <xs:element name="getNicResponse" type="tns:getNicResponse" />
      <xs:element name="getNotifications" type="tns:getNotifications" />
      <xs:element name="getNotificationsResponse" type="tns:getNotificationsResponse" />
      <xs:element name="getPublicIpBlock" type="tns:getPublicIpBlock" />
      <xs:element name="getPublicIpBlockResponse" type="tns:getPublicIpBlockResponse" />
      <xs:element name="getServer" type="tns:getServer" />
      <xs:element name="getServerResponse" type="tns:getServerResponse" />
      <xs:element name="getSnapshot" type="tns:getSnapshot" />
      <xs:element name="getSnapshotResponse" type="tns:getSnapshotResponse" />
      <xs:element name="getStorage" type="tns:getStorage" />
      <xs:element name="getStorageResponse" type="tns:getStorageResponse" />
      <xs:element name="imageOsTypeRequest" type="tns:imageOsTypeRequest" />
      <xs:element name="registerServersOnLoadBalancer" type="tns:registerServersOnLoadBalancer" />
      <xs:element name="registerServersOnLoadBalancerResponse" type="tns:registerServersOnLoadBalancerResponse" />
      <xs:element name="releasePublicIpBlock" type="tns:releasePublicIpBlock" />
      <xs:element name="releasePublicIpBlockResponse" type="tns:releasePublicIpBlockResponse" />
      <xs:element name="removeFirewallRules" type="tns:removeFirewallRules" />
      <xs:element name="removeFirewallRulesResponse" type="tns:removeFirewallRulesResponse" />
      <xs:element name="removePublicIpFromNic" type="tns:removePublicIpFromNic" />
      <xs:element name="removePublicIpFromNicResponse" type="tns:removePublicIpFromNicResponse" />
      <xs:element name="removeRomDriveFromServer" type="tns:removeRomDriveFromServer" />
      <xs:element name="removeRomDriveFromServerResponse" type="tns:removeRomDriveFromServerResponse" />
      <xs:element name="reservePublicIpBlock" type="tns:reservePublicIpBlock" />
      <xs:element name="reservePublicIpBlockResponse" type="tns:reservePublicIpBlockResponse" />
      <xs:element name="resetServer" type="tns:resetServer" />
      <xs:element name="resetServerResponse" type="tns:resetServerResponse" />
      <xs:element name="rollbackSnapshot" type="tns:rollbackSnapshot" />
      <xs:element name="rollbackSnapshotRequest" type="tns:rollbackSnapshotRequest" />
      <xs:element name="rollbackSnapshotResponse" type="tns:rollbackSnapshotResponse" />
      <xs:element name="romDriveRequest" type="tns:romDriveRequest" />
      <xs:element name="setImageOsType" type="tns:setImageOsType" />
      <xs:element name="setImageOsTypeResponse" type="tns:setImageOsTypeResponse" />
      <xs:element name="setInternetAccess" type="tns:setInternetAccess" />
      <xs:element name="setInternetAccessResponse" type="tns:setInternetAccessResponse" />
      <xs:element name="startServer" type="tns:startServer" />
      <xs:element name="startServerResponse" type="tns:startServerResponse" />
      <xs:element name="stopServer" type="tns:stopServer" />
      <xs:element name="stopServerResponse" type="tns:stopServerResponse" />
      <xs:element name="updateDataCenter" type="tns:updateDataCenter" />
      <xs:element name="updateDataCenterResponse" type="tns:updateDataCenterResponse" />
      <xs:element name="updateDcRequest" type="tns:updateDcRequest" />
      <xs:element name="updateImage" type="tns:updateImage" />
      <xs:element name="updateImageRequest" type="tns:updateImageRequest" />
      <xs:element name="updateImageResponse" type="tns:updateImageResponse" />
      <xs:element name="updateLbRequest" type="tns:updateLbRequest" />
      <xs:element name="updateLoadBalancer" type="tns:updateLoadBalancer" />
      <xs:element name="updateLoadBalancerResponse" type="tns:updateLoadBalancerResponse" />
      <xs:element name="updateNic" type="tns:updateNic" />
      <xs:element name="updateNicRequest" type="tns:updateNicRequest" />
      <xs:element name="updateNicResponse" type="tns:updateNicResponse" />
      <xs:element name="updateServer" type="tns:updateServer" />
      <xs:element name="updateServerRequest" type="tns:updateServerRequest" />
      <xs:element name="updateServerResponse" type="tns:updateServerResponse" />
      <xs:element name="updateSnapshot" type="tns:updateSnapshot" />
      <xs:element name="updateSnapshotRequest" type="tns:updateSnapshotRequest" />
      <xs:element name="updateSnapshotResponse" type="tns:updateSnapshotResponse" />
      <xs:element name="updateStorage" type="tns:updateStorage" />
      <xs:element name="updateStorageRequest" type="tns:updateStorageRequest" />
      <xs:element name="updateStorageResponse" type="tns:updateStorageResponse" />
      <xs:complexType name="createSnapshot">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createSnapshotRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createSnapshotRequest">
        <xs:sequence>
          <xs:element name="storageId" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="snapshotName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createSnapshotReturn">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createSnapshotResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createSnapshotResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:requestResponse">
            <xs:sequence>
              <xs:element name="snapshotId" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="requestResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="requestId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProfitbricksServiceFault">
        <xs:sequence>
          <xs:element minOccurs="0" name="faultCode" type="tns:faultCode" />
          <xs:element minOccurs="0" name="httpCode" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="requestId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="releasePublicIpBlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="blockId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="releasePublicIpBlockResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:nic" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nic">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="nicId" type="xs:string" />
              <xs:element minOccurs="0" name="nicName" type="xs:string" />
              <xs:element name="lanId" type="xs:int" />
              <xs:element minOccurs="0" name="internetAccess" type="xs:boolean" />
              <xs:element minOccurs="0" name="serverId" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="ips" nillable="true" type="xs:string" />
              <xs:element minOccurs="0" name="macAddress" type="xs:string" />
              <xs:element minOccurs="0" name="firewall" type="tns:firewall" />
              <xs:element minOccurs="0" name="dhcpActive" type="xs:boolean" />
              <xs:element minOccurs="0" name="gatewayIp" type="xs:string" />
              <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="versionResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:requestResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
              <xs:element minOccurs="0" name="dataCenterVersion" type="xs:int" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="firewall">
        <xs:sequence>
          <xs:element name="active" type="xs:boolean" />
          <xs:element minOccurs="0" name="firewallId" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="firewallRules" nillable="true" type="tns:firewallRule" />
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
          <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="firewallRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="firewallRuleId" type="xs:string" />
          <xs:element minOccurs="0" name="icmpCode" type="xs:int" />
          <xs:element minOccurs="0" name="icmpType" type="xs:int" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="portRangeEnd" type="xs:int" />
          <xs:element minOccurs="0" name="portRangeStart" type="xs:int" />
          <xs:element minOccurs="0" name="protocol" type="tns:protocol" />
          <xs:element minOccurs="0" name="sourceIp" type="xs:string" />
          <xs:element minOccurs="0" name="sourceMac" type="xs:string" />
          <xs:element minOccurs="0" name="targetIp" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteImage">
        <xs:sequence>
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteImageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:server" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="server">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="serverId" type="xs:string" />
              <xs:element minOccurs="0" name="serverName" type="xs:string" />
              <xs:element minOccurs="0" name="cores" type="xs:int" />
              <xs:element minOccurs="0" name="ram" type="xs:int" />
              <xs:element name="internetAccess" type="xs:boolean" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="ips" nillable="true" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="connectedStorages" nillable="true" type="tns:connectedStorage" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="romDrives" nillable="true" type="tns:romDrive" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="nics" nillable="true" type="tns:nic" />
              <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
              <xs:element minOccurs="0" name="virtualMachineState" type="tns:virtualMachineState" />
              <xs:element minOccurs="0" name="creationTime" type="xs:dateTime" />
              <xs:element minOccurs="0" name="lastModificationTime" type="xs:dateTime" />
              <xs:element minOccurs="0" name="osType" type="tns:osType" />
              <xs:element minOccurs="0" name="availabilityZone" type="tns:availabilityZone" />
              <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="connectedStorage">
        <xs:sequence>
          <xs:element name="bootDevice" type="xs:boolean" />
          <xs:element minOccurs="0" name="busType" type="tns:busType" />
          <xs:element minOccurs="0" name="deviceNumber" type="xs:int" />
          <xs:element minOccurs="0" name="size" type="xs:long" />
          <xs:element minOccurs="0" name="storageId" type="xs:string" />
          <xs:element minOccurs="0" name="storageName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="romDrive">
        <xs:sequence>
          <xs:element name="bootDevice" type="xs:boolean" />
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
          <xs:element minOccurs="0" name="imageName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPublicIpToNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPublicIpToNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setInternetAccess">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
          <xs:element minOccurs="0" name="lanId" type="xs:int" />
          <xs:element name="internetAccess" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setInternetAccessResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDataCenter">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDataCenterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllNic">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:nic" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reservePublicIpBlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createReservePublicIpBlockRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createReservePublicIpBlockRequest">
        <xs:sequence>
          <xs:element name="blockSize" type="xs:int" />
          <xs:element name="location" type="tns:location" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reservePublicIpBlockResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:ipBlockResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ipBlockResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:requestResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="blockId" type="xs:string" />
              <xs:element minOccurs="0" name="location" type="tns:location" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="ips" nillable="true" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFirewall">
        <xs:sequence>
          <xs:element minOccurs="0" name="firewallId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFirewallResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:firewall" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deactivateLoadBalancingOnServers">
        <xs:sequence>
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deactivateLoadBalancingOnServersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllImages">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllImagesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:image" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="image">
        <xs:sequence>
          <xs:element minOccurs="0" name="bootable" type="xs:boolean" />
          <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="cpuHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
          <xs:element minOccurs="0" name="imageName" type="xs:string" />
          <xs:element minOccurs="0" name="imageSize" type="xs:long" />
          <xs:element minOccurs="0" name="imageType" type="tns:imageType" />
          <xs:element minOccurs="0" name="location" type="tns:location" />
          <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="osType" type="tns:osType" />
          <xs:element minOccurs="0" name="public" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="writeable" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deactivateFirewalls">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="firewallIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deactivateFirewallsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removePublicIpFromNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removePublicIpFromNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateServerRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateServerRequest">
        <xs:sequence>
          <xs:element name="serverId" type="xs:string" />
          <xs:element minOccurs="0" name="serverName" type="xs:string" />
          <xs:element minOccurs="0" name="cores" type="xs:int" />
          <xs:element minOccurs="0" name="ram" type="xs:int" />
          <xs:element minOccurs="0" name="bootFromStorageId" type="xs:string" />
          <xs:element minOccurs="0" name="bootFromImageId" type="xs:string" />
          <xs:element minOccurs="0" name="osType" type="tns:osType" />
          <xs:element minOccurs="0" name="availabilityZone" type="tns:availabilityZone" />
          <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="disconnectStorageFromServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="storageId" type="xs:string" />
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="disconnectStorageFromServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDataCenter">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createDataCenterRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDataCenterRequest">
        <xs:sequence>
          <xs:element name="dataCenterName" type="xs:string" />
          <xs:element name="location" type="tns:location" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDataCenterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createDcResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDcResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:requestResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
              <xs:element minOccurs="0" name="dataCenterVersion" type="xs:int" />
              <xs:element minOccurs="0" name="location" type="tns:location" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="createNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createNicRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createNicRequest">
        <xs:sequence>
          <xs:element name="serverId" type="xs:string" />
          <xs:element name="lanId" type="xs:int" />
          <xs:element minOccurs="0" name="nicName" type="xs:string" />
          <xs:element minOccurs="0" name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="dhcpActive" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createNicReturn">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createNicResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createNicResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="nicId" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="addFirewallRulesToLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="request" type="tns:firewallRuleRequest" />
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="firewallRuleRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="icmpCode" type="xs:int" />
          <xs:element minOccurs="0" name="icmpType" type="xs:int" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="portRangeEnd" type="xs:int" />
          <xs:element minOccurs="0" name="portRangeStart" type="xs:int" />
          <xs:element minOccurs="0" name="protocol" type="tns:protocol" />
          <xs:element minOccurs="0" name="sourceIp" type="xs:string" />
          <xs:element minOccurs="0" name="sourceMac" type="xs:string" />
          <xs:element minOccurs="0" name="targetIp" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addFirewallRulesToLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:firewall" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeRomDriveFromServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeRomDriveFromServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllServers">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllServersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:server" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllPublicIpBlocks">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllPublicIpBlocksResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:ipBlock" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ipBlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="blockId" type="xs:string" />
          <xs:element minOccurs="0" name="location" type="tns:location" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="publicIps" nillable="true" type="tns:publicIp" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="publicIp">
        <xs:sequence>
          <xs:element name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createLbRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLbRequest">
        <xs:sequence>
          <xs:element name="dataCenterId" type="xs:string" />
          <xs:element minOccurs="0" default="Load Balancer" name="loadBalancerName" type="xs:string" />
          <xs:element minOccurs="0" default="ROUND_ROBIN" name="loadBalancerAlgorithm" type="tns:loadBalancerAlgorithm" />
          <xs:element minOccurs="0" name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="lanId" type="xs:int" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createLbResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLbResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateSnapshot">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateSnapshotRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateSnapshotRequest">
        <xs:sequence>
          <xs:element name="snapshotId" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="snapshotName" type="xs:string" />
          <xs:element minOccurs="0" name="bootable" type="xs:boolean" />
          <xs:element minOccurs="0" name="osType" type="tns:osType" />
          <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="cpuHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateSnapshotResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateStorage">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateStorageRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateStorageRequest">
        <xs:sequence>
          <xs:element name="storageId" type="xs:string" />
          <xs:element minOccurs="0" name="size" type="xs:long" />
          <xs:element minOccurs="0" name="storageName" type="xs:string" />
          <xs:element minOccurs="0" name="mountImageId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateStorageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:loadBalancer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loadBalancer">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
              <xs:element minOccurs="0" name="loadBalancerName" type="xs:string" />
              <xs:element minOccurs="0" name="loadBalancerAlgorithm" type="tns:loadBalancerAlgorithm" />
              <xs:element name="internetAccess" type="xs:boolean" />
              <xs:element minOccurs="0" name="ip" type="xs:string" />
              <xs:element name="lanId" type="xs:int" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="balancedServers" nillable="true" type="tns:balancedServer" />
              <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
              <xs:element minOccurs="0" name="creationTime" type="xs:dateTime" />
              <xs:element minOccurs="0" name="lastModificationTime" type="xs:dateTime" />
              <xs:element minOccurs="0" name="firewall" type="tns:firewall" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="balancedServer">
        <xs:sequence>
          <xs:element name="activate" type="xs:boolean" />
          <xs:element minOccurs="0" name="balancedNicId" type="xs:string" />
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
          <xs:element minOccurs="0" name="serverName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rollbackSnapshot">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:rollbackSnapshotRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rollbackSnapshotRequest">
        <xs:sequence>
          <xs:element name="storageId" type="xs:string" />
          <xs:element name="snapshotId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rollbackSnapshotResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerServersOnLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" type="xs:string" />
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerServersOnLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:registerLbServerResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerLbServerResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
              <xs:element name="lanId" type="xs:int" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="balancedServers" nillable="true" type="tns:balancedServer" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getAllFirewalls">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllFirewallsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:firewall" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="startServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="startServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activateLoadBalancingOnServers">
        <xs:sequence>
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activateLoadBalancingOnServersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllSnapshots">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllSnapshotsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:snapshot" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="snapshot">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:requestResponse">
            <xs:sequence>
              <xs:element name="snapshotId" type="xs:string" />
              <xs:element minOccurs="0" name="description" type="xs:string" />
              <xs:element name="snapshotSize" type="xs:long" />
              <xs:element minOccurs="0" name="snapshotName" type="xs:string" />
              <xs:element name="provisioningState" type="tns:provisioningState" />
              <xs:element minOccurs="0" name="bootable" type="xs:boolean" />
              <xs:element minOccurs="0" name="osType" type="tns:osType" />
              <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="cpuHotUnPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="ramHotUnPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
              <xs:element minOccurs="0" name="creationTimestamp" type="xs:dateTime" />
              <xs:element minOccurs="0" name="modificationTimestamp" type="xs:dateTime" />
              <xs:element name="location" type="tns:location" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="createStorage">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createStorageRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createStorageRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
          <xs:element minOccurs="0" name="storageName" type="xs:string" />
          <xs:element name="size" type="xs:long" />
          <xs:element minOccurs="0" name="mountImageId" type="xs:string" />
          <xs:element minOccurs="0" name="profitBricksImagePassword" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createStorageReturn">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createStorageResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createStorageResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="storageId" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deregisterServersOnLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" type="xs:string" />
          <xs:element minOccurs="0" name="loadBalancerId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deregisterServersOnLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDataCenter">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateDcRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDcRequest">
        <xs:sequence>
          <xs:element name="dataCenterId" type="xs:string" />
          <xs:element minOccurs="0" name="dataCenterName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDataCenterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateImage">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateImageRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateImageRequest">
        <xs:sequence>
          <xs:element name="imageId" type="xs:string" />
          <xs:element name="imageName" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="osType" type="tns:osType" />
          <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="cpuHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="bootable" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateImageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addRomDriveToServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:romDriveRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="romDriveRequest">
        <xs:sequence>
          <xs:element name="imageId" type="xs:string" />
          <xs:element name="serverId" type="xs:string" />
          <xs:element minOccurs="0" name="deviceNumber" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addRomDriveToServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateNic">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateNicRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateNicRequest">
        <xs:sequence>
          <xs:element name="nicId" type="xs:string" />
          <xs:element minOccurs="0" name="lanId" type="xs:int" />
          <xs:element minOccurs="0" name="nicName" type="xs:string" />
          <xs:element minOccurs="0" name="ip" type="xs:string" />
          <xs:element minOccurs="0" name="dhcpActive" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllDataCenters">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllDataCentersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:dataCenterIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dataCenterIdentifier">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
          <xs:element minOccurs="0" name="dataCenterName" type="xs:string" />
          <xs:element minOccurs="0" name="dataCenterVersion" type="xs:int" />
          <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllLoadBalancers">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllLoadBalancersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:loadBalancer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:createServerRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createServerRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
          <xs:element name="cores" type="xs:int" />
          <xs:element name="ram" type="xs:int" />
          <xs:element minOccurs="0" default="" name="serverName" type="xs:string" />
          <xs:element minOccurs="0" name="bootFromStorageId" type="xs:string" />
          <xs:element minOccurs="0" name="bootFromImageId" type="xs:string" />
          <xs:element name="internetAccess" type="xs:boolean" />
          <xs:element minOccurs="0" name="lanId" type="xs:int" />
          <xs:element minOccurs="0" name="osType" type="tns:osType" />
          <xs:element minOccurs="0" name="availabilityZone" type="tns:availabilityZone" />
          <xs:element minOccurs="0" name="cpuHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="ramHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="nicHotUnPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotPlug" type="xs:boolean" />
          <xs:element minOccurs="0" name="discVirtioHotUnPlug" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createServerReturn">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:createServerResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createServerResponse">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="serverId" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteNotifications">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="notificationId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNotificationsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="addFirewallRulesToNic">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="request" type="tns:firewallRuleRequest" />
          <xs:element minOccurs="0" name="nicId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addFirewallRulesToNicResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:firewall" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStorage">
        <xs:sequence>
          <xs:element minOccurs="0" name="storageId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStorageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:storage" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storage">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="storageId" type="xs:string" />
              <xs:element minOccurs="0" name="size" type="xs:long" />
              <xs:element minOccurs="0" name="storageName" type="xs:string" />
              <xs:element minOccurs="0" name="mountImage" type="tns:mountImage" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="serverIds" nillable="true" type="xs:string" />
              <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
              <xs:element minOccurs="0" name="creationTime" type="xs:dateTime" />
              <xs:element minOccurs="0" name="lastModificationTime" type="xs:dateTime" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="mountImage">
        <xs:sequence>
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
          <xs:element minOccurs="0" name="imageName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFirewalls">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="firewallIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFirewallsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDataCenter">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDataCenterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:dataCenter" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dataCenter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:versionResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="dataCenterName" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="servers" nillable="true" type="tns:server" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="storages" nillable="true" type="tns:storage" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="loadBalancers" nillable="true" type="tns:loadBalancer" />
              <xs:element minOccurs="0" name="provisioningState" type="tns:provisioningState" />
              <xs:element minOccurs="0" name="location" type="tns:location" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteSnapshot">
        <xs:sequence>
          <xs:element minOccurs="0" name="snapshotId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteSnapshotResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLoadBalancer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:updateLbRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLbRequest">
        <xs:sequence>
          <xs:element name="loadBalancerId" type="xs:string" />
          <xs:element minOccurs="0" name="loadBalancerName" type="xs:string" />
          <xs:element minOccurs="0" name="loadBalancerAlgorithm" type="tns:loadBalancerAlgorithm" />
          <xs:element minOccurs="0" name="ip" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLoadBalancerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteStorage">
        <xs:sequence>
          <xs:element minOccurs="0" name="storageId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteStorageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSnapshot">
        <xs:sequence>
          <xs:element minOccurs="0" name="snapshotId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSnapshotResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:snapshot" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="connectStorageToServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:connectStorageRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="connectStorageRequest">
        <xs:sequence>
          <xs:element name="serverId" type="xs:string" />
          <xs:element name="storageId" type="xs:string" />
          <xs:element minOccurs="0" name="busType" type="tns:busType" />
          <xs:element minOccurs="0" name="deviceNumber" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="connectStorageToServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeFirewallRules">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="firewallRuleIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeFirewallRulesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNotifications">
        <xs:sequence>
          <xs:element minOccurs="0" name="networkUUID" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNotificationsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:notification" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="notification">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string" />
          <xs:element minOccurs="0" name="networkUUid" type="xs:string" />
          <xs:element minOccurs="0" name="relatedItemUuid" type="xs:string" />
          <xs:element minOccurs="0" name="timestamp" type="xs:dateTime" />
          <xs:element minOccurs="0" name="messageCode" type="tns:notificationCode" />
          <xs:element minOccurs="0" name="relatedItemType" type="tns:virtualItemType" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllStorages">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAllStoragesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:storage" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPublicIpBlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="blockId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPublicIpBlockResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:ipBlock" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clearDataCenter">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clearDataCenterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDataCenterState">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataCenterId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDataCenterStateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:provisioningState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setImageOsType">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" type="tns:imageOsTypeRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="imageOsTypeRequest">
        <xs:sequence>
          <xs:element name="imageId" type="xs:string" />
          <xs:element name="osType" type="tns:osType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setImageOsTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activateFirewalls">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="firewallIds" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activateFirewallsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:versionResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getImage">
        <xs:sequence>
          <xs:element minOccurs="0" name="imageId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getImageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:image" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetServerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:requestResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="faultCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BAD_REQUEST" />
          <xs:enumeration value="UNEXPECTED" />
          <xs:enumeration value="UNAUTHORIZED" />
          <xs:enumeration value="RESOURCE_NOT_FOUND" />
          <xs:enumeration value="RESOURCE_DELETED" />
          <xs:enumeration value="PROVISIONING_IN_PROCESS" />
          <xs:enumeration value="PROVISIONING_NO_CHANGES" />
          <xs:enumeration value="OVER_LIMIT_SETTING" />
          <xs:enumeration value="SERVER_EXCEED_CAPACITY" />
          <xs:enumeration value="SERVICE_UNAVAILABLE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="protocol">
        <xs:restriction base="xs:string">
          <xs:enumeration value="TCP" />
          <xs:enumeration value="UDP" />
          <xs:enumeration value="ICMP" />
          <xs:enumeration value="ANY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="provisioningState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INACTIVE" />
          <xs:enumeration value="INPROCESS" />
          <xs:enumeration value="AVAILABLE" />
          <xs:enumeration value="DELETED" />
          <xs:enumeration value="ERROR" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="busType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="IDE" />
          <xs:enumeration value="SCSI" />
          <xs:enumeration value="VIRTIO" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="virtualMachineState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOSTATE" />
          <xs:enumeration value="RUNNING" />
          <xs:enumeration value="BLOCKED" />
          <xs:enumeration value="PAUSED" />
          <xs:enumeration value="SHUTDOWN" />
          <xs:enumeration value="SHUTOFF" />
          <xs:enumeration value="CRASHED" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="osType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN" />
          <xs:enumeration value="WINDOWS" />
          <xs:enumeration value="LINUX" />
          <xs:enumeration value="OTHER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="availabilityZone">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AUTO" />
          <xs:enumeration value="ZONE_1" />
          <xs:enumeration value="ZONE_2" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="location">
        <xs:restriction base="xs:string">
          <xs:enumeration value="de/fkb" />
          <xs:enumeration value="de/fra" />
          <xs:enumeration value="us/las" />
          <xs:enumeration value="us/lasdev" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="imageType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="HDD" />
          <xs:enumeration value="CDROM" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="loadBalancerAlgorithm">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ROUND_ROBIN" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="notificationCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OTHER" />
          <xs:enumeration value="SHUTDOWN_SERVER_FAILED" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="virtualItemType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="TYPE_OTHER" />
          <xs:enumeration value="TYPE_SERVER" />
          <xs:enumeration value="TYPE_STORAGE" />
          <xs:enumeration value="TYPE_IMAGE" />
          <xs:enumeration value="TYPE_LOADBALANCER" />
          <xs:enumeration value="TYPE_NIC" />
          <xs:enumeration value="TYPE_FIREWALL" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="createDataCenter">
    <part name="parameters" element="tns:createDataCenter" />
  </message>
  <message name="createDataCenterResponse">
    <part name="parameters" element="tns:createDataCenterResponse" />
  </message>
  <message name="ProfitbricksServiceFault">
    <part name="fault" element="tns:ProfitbricksServiceFault" />
  </message>
  <message name="updateDataCenter">
    <part name="parameters" element="tns:updateDataCenter" />
  </message>
  <message name="updateDataCenterResponse">
    <part name="parameters" element="tns:updateDataCenterResponse" />
  </message>
  <message name="clearDataCenter">
    <part name="parameters" element="tns:clearDataCenter" />
  </message>
  <message name="clearDataCenterResponse">
    <part name="parameters" element="tns:clearDataCenterResponse" />
  </message>
  <message name="deleteDataCenter">
    <part name="parameters" element="tns:deleteDataCenter" />
  </message>
  <message name="deleteDataCenterResponse">
    <part name="parameters" element="tns:deleteDataCenterResponse" />
  </message>
  <message name="getAllDataCenters">
    <part name="parameters" element="tns:getAllDataCenters" />
  </message>
  <message name="getAllDataCentersResponse">
    <part name="parameters" element="tns:getAllDataCentersResponse" />
  </message>
  <message name="createServer">
    <part name="parameters" element="tns:createServer" />
  </message>
  <message name="createServerResponse">
    <part name="parameters" element="tns:createServerReturn" />
  </message>
  <message name="updateServer">
    <part name="parameters" element="tns:updateServer" />
  </message>
  <message name="updateServerResponse">
    <part name="parameters" element="tns:updateServerResponse" />
  </message>
  <message name="deleteServer">
    <part name="parameters" element="tns:deleteServer" />
  </message>
  <message name="deleteServerResponse">
    <part name="parameters" element="tns:deleteServerResponse" />
  </message>
  <message name="stopServer">
    <part name="parameters" element="tns:stopServer" />
  </message>
  <message name="stopServerResponse">
    <part name="parameters" element="tns:stopServerResponse" />
  </message>
  <message name="startServer">
    <part name="parameters" element="tns:startServer" />
  </message>
  <message name="startServerResponse">
    <part name="parameters" element="tns:startServerResponse" />
  </message>
  <message name="resetServer">
    <part name="parameters" element="tns:resetServer" />
  </message>
  <message name="resetServerResponse">
    <part name="parameters" element="tns:resetServerResponse" />
  </message>
  <message name="getServer">
    <part name="parameters" element="tns:getServer" />
  </message>
  <message name="getServerResponse">
    <part name="parameters" element="tns:getServerResponse" />
  </message>
  <message name="getAllServers">
    <part name="parameters" element="tns:getAllServers" />
  </message>
  <message name="getAllServersResponse">
    <part name="parameters" element="tns:getAllServersResponse" />
  </message>
  <message name="getAllStorages">
    <part name="parameters" element="tns:getAllStorages" />
  </message>
  <message name="getAllStoragesResponse">
    <part name="parameters" element="tns:getAllStoragesResponse" />
  </message>
  <message name="createNic">
    <part name="parameters" element="tns:createNic" />
  </message>
  <message name="createNicResponse">
    <part name="parameters" element="tns:createNicReturn" />
  </message>
  <message name="deleteNic">
    <part name="parameters" element="tns:deleteNic" />
  </message>
  <message name="deleteNicResponse">
    <part name="parameters" element="tns:deleteNicResponse" />
  </message>
  <message name="updateNic">
    <part name="parameters" element="tns:updateNic" />
  </message>
  <message name="updateNicResponse">
    <part name="parameters" element="tns:updateNicResponse" />
  </message>
  <message name="getNic">
    <part name="parameters" element="tns:getNic" />
  </message>
  <message name="getNicResponse">
    <part name="parameters" element="tns:getNicResponse" />
  </message>
  <message name="getAllNic">
    <part name="parameters" element="tns:getAllNic" />
  </message>
  <message name="getAllNicResponse">
    <part name="parameters" element="tns:getAllNicResponse" />
  </message>
  <message name="setInternetAccess">
    <part name="parameters" element="tns:setInternetAccess" />
  </message>
  <message name="setInternetAccessResponse">
    <part name="parameters" element="tns:setInternetAccessResponse" />
  </message>
  <message name="createStorage">
    <part name="parameters" element="tns:createStorage" />
  </message>
  <message name="createStorageResponse">
    <part name="parameters" element="tns:createStorageReturn" />
  </message>
  <message name="updateStorage">
    <part name="parameters" element="tns:updateStorage" />
  </message>
  <message name="updateStorageResponse">
    <part name="parameters" element="tns:updateStorageResponse" />
  </message>
  <message name="deleteStorage">
    <part name="parameters" element="tns:deleteStorage" />
  </message>
  <message name="deleteStorageResponse">
    <part name="parameters" element="tns:deleteStorageResponse" />
  </message>
  <message name="connectStorageToServer">
    <part name="parameters" element="tns:connectStorageToServer" />
  </message>
  <message name="connectStorageToServerResponse">
    <part name="parameters" element="tns:connectStorageToServerResponse" />
  </message>
  <message name="disconnectStorageFromServer">
    <part name="parameters" element="tns:disconnectStorageFromServer" />
  </message>
  <message name="disconnectStorageFromServerResponse">
    <part name="parameters" element="tns:disconnectStorageFromServerResponse" />
  </message>
  <message name="deleteImage">
    <part name="parameters" element="tns:deleteImage" />
  </message>
  <message name="deleteImageResponse">
    <part name="parameters" element="tns:deleteImageResponse" />
  </message>
  <message name="updateImage">
    <part name="parameters" element="tns:updateImage" />
  </message>
  <message name="updateImageResponse">
    <part name="parameters" element="tns:updateImageResponse" />
  </message>
  <message name="getAllImages">
    <part name="parameters" element="tns:getAllImages" />
  </message>
  <message name="getAllImagesResponse">
    <part name="parameters" element="tns:getAllImagesResponse" />
  </message>
  <message name="setImageOsType">
    <part name="parameters" element="tns:setImageOsType" />
  </message>
  <message name="setImageOsTypeResponse">
    <part name="parameters" element="tns:setImageOsTypeResponse" />
  </message>
  <message name="addRomDriveToServer">
    <part name="parameters" element="tns:addRomDriveToServer" />
  </message>
  <message name="addRomDriveToServerResponse">
    <part name="parameters" element="tns:addRomDriveToServerResponse" />
  </message>
  <message name="removeRomDriveFromServer">
    <part name="parameters" element="tns:removeRomDriveFromServer" />
  </message>
  <message name="removeRomDriveFromServerResponse">
    <part name="parameters" element="tns:removeRomDriveFromServerResponse" />
  </message>
  <message name="getImage">
    <part name="parameters" element="tns:getImage" />
  </message>
  <message name="getImageResponse">
    <part name="parameters" element="tns:getImageResponse" />
  </message>
  <message name="getDataCenter">
    <part name="parameters" element="tns:getDataCenter" />
  </message>
  <message name="getDataCenterResponse">
    <part name="parameters" element="tns:getDataCenterResponse" />
  </message>
  <message name="getDataCenterState">
    <part name="parameters" element="tns:getDataCenterState" />
  </message>
  <message name="getDataCenterStateResponse">
    <part name="parameters" element="tns:getDataCenterStateResponse" />
  </message>
  <message name="getStorage">
    <part name="parameters" element="tns:getStorage" />
  </message>
  <message name="getStorageResponse">
    <part name="parameters" element="tns:getStorageResponse" />
  </message>
  <message name="reservePublicIpBlock">
    <part name="parameters" element="tns:reservePublicIpBlock" />
  </message>
  <message name="reservePublicIpBlockResponse">
    <part name="parameters" element="tns:reservePublicIpBlockResponse" />
  </message>
  <message name="releasePublicIpBlock">
    <part name="parameters" element="tns:releasePublicIpBlock" />
  </message>
  <message name="releasePublicIpBlockResponse">
    <part name="parameters" element="tns:releasePublicIpBlockResponse" />
  </message>
  <message name="addPublicIpToNic">
    <part name="parameters" element="tns:addPublicIpToNic" />
  </message>
  <message name="addPublicIpToNicResponse">
    <part name="parameters" element="tns:addPublicIpToNicResponse" />
  </message>
  <message name="removePublicIpFromNic">
    <part name="parameters" element="tns:removePublicIpFromNic" />
  </message>
  <message name="removePublicIpFromNicResponse">
    <part name="parameters" element="tns:removePublicIpFromNicResponse" />
  </message>
  <message name="getAllPublicIpBlocks">
    <part name="parameters" element="tns:getAllPublicIpBlocks" />
  </message>
  <message name="getAllPublicIpBlocksResponse">
    <part name="parameters" element="tns:getAllPublicIpBlocksResponse" />
  </message>
  <message name="getPublicIpBlock">
    <part name="parameters" element="tns:getPublicIpBlock" />
  </message>
  <message name="getPublicIpBlockResponse">
    <part name="parameters" element="tns:getPublicIpBlockResponse" />
  </message>
  <message name="createLoadBalancer">
    <part name="parameters" element="tns:createLoadBalancer" />
  </message>
  <message name="createLoadBalancerResponse">
    <part name="parameters" element="tns:createLoadBalancerResponse" />
  </message>
  <message name="updateLoadBalancer">
    <part name="parameters" element="tns:updateLoadBalancer" />
  </message>
  <message name="updateLoadBalancerResponse">
    <part name="parameters" element="tns:updateLoadBalancerResponse" />
  </message>
  <message name="deleteLoadBalancer">
    <part name="parameters" element="tns:deleteLoadBalancer" />
  </message>
  <message name="deleteLoadBalancerResponse">
    <part name="parameters" element="tns:deleteLoadBalancerResponse" />
  </message>
  <message name="getLoadBalancer">
    <part name="parameters" element="tns:getLoadBalancer" />
  </message>
  <message name="getLoadBalancerResponse">
    <part name="parameters" element="tns:getLoadBalancerResponse" />
  </message>
  <message name="getAllLoadBalancers">
    <part name="parameters" element="tns:getAllLoadBalancers" />
  </message>
  <message name="getAllLoadBalancersResponse">
    <part name="parameters" element="tns:getAllLoadBalancersResponse" />
  </message>
  <message name="registerServersOnLoadBalancer">
    <part name="parameters" element="tns:registerServersOnLoadBalancer" />
  </message>
  <message name="registerServersOnLoadBalancerResponse">
    <part name="parameters" element="tns:registerServersOnLoadBalancerResponse" />
  </message>
  <message name="deregisterServersOnLoadBalancer">
    <part name="parameters" element="tns:deregisterServersOnLoadBalancer" />
  </message>
  <message name="deregisterServersOnLoadBalancerResponse">
    <part name="parameters" element="tns:deregisterServersOnLoadBalancerResponse" />
  </message>
  <message name="activateLoadBalancingOnServers">
    <part name="parameters" element="tns:activateLoadBalancingOnServers" />
  </message>
  <message name="activateLoadBalancingOnServersResponse">
    <part name="parameters" element="tns:activateLoadBalancingOnServersResponse" />
  </message>
  <message name="deactivateLoadBalancingOnServers">
    <part name="parameters" element="tns:deactivateLoadBalancingOnServers" />
  </message>
  <message name="deactivateLoadBalancingOnServersResponse">
    <part name="parameters" element="tns:deactivateLoadBalancingOnServersResponse" />
  </message>
  <message name="addFirewallRulesToNic">
    <part name="parameters" element="tns:addFirewallRulesToNic" />
  </message>
  <message name="addFirewallRulesToNicResponse">
    <part name="parameters" element="tns:addFirewallRulesToNicResponse" />
  </message>
  <message name="addFirewallRulesToLoadBalancer">
    <part name="parameters" element="tns:addFirewallRulesToLoadBalancer" />
  </message>
  <message name="addFirewallRulesToLoadBalancerResponse">
    <part name="parameters" element="tns:addFirewallRulesToLoadBalancerResponse" />
  </message>
  <message name="removeFirewallRules">
    <part name="parameters" element="tns:removeFirewallRules" />
  </message>
  <message name="removeFirewallRulesResponse">
    <part name="parameters" element="tns:removeFirewallRulesResponse" />
  </message>
  <message name="activateFirewalls">
    <part name="parameters" element="tns:activateFirewalls" />
  </message>
  <message name="activateFirewallsResponse">
    <part name="parameters" element="tns:activateFirewallsResponse" />
  </message>
  <message name="deactivateFirewalls">
    <part name="parameters" element="tns:deactivateFirewalls" />
  </message>
  <message name="deactivateFirewallsResponse">
    <part name="parameters" element="tns:deactivateFirewallsResponse" />
  </message>
  <message name="deleteFirewalls">
    <part name="parameters" element="tns:deleteFirewalls" />
  </message>
  <message name="deleteFirewallsResponse">
    <part name="parameters" element="tns:deleteFirewallsResponse" />
  </message>
  <message name="getFirewall">
    <part name="parameters" element="tns:getFirewall" />
  </message>
  <message name="getFirewallResponse">
    <part name="parameters" element="tns:getFirewallResponse" />
  </message>
  <message name="getAllFirewalls">
    <part name="parameters" element="tns:getAllFirewalls" />
  </message>
  <message name="getAllFirewallsResponse">
    <part name="parameters" element="tns:getAllFirewallsResponse" />
  </message>
  <message name="getAllSnapshots">
    <part name="parameters" element="tns:getAllSnapshots" />
  </message>
  <message name="getAllSnapshotsResponse">
    <part name="parameters" element="tns:getAllSnapshotsResponse" />
  </message>
  <message name="updateSnapshot">
    <part name="parameters" element="tns:updateSnapshot" />
  </message>
  <message name="updateSnapshotResponse">
    <part name="parameters" element="tns:updateSnapshotResponse" />
  </message>
  <message name="getSnapshot">
    <part name="parameters" element="tns:getSnapshot" />
  </message>
  <message name="getSnapshotResponse">
    <part name="parameters" element="tns:getSnapshotResponse" />
  </message>
  <message name="createSnapshot">
    <part name="parameters" element="tns:createSnapshot" />
  </message>
  <message name="createSnapshotResponse">
    <part name="parameters" element="tns:createSnapshotReturn" />
  </message>
  <message name="deleteSnapshot">
    <part name="parameters" element="tns:deleteSnapshot" />
  </message>
  <message name="deleteSnapshotResponse">
    <part name="parameters" element="tns:deleteSnapshotResponse" />
  </message>
  <message name="rollbackSnapshot">
    <part name="parameters" element="tns:rollbackSnapshot" />
  </message>
  <message name="rollbackSnapshotResponse">
    <part name="parameters" element="tns:rollbackSnapshotResponse" />
  </message>
  <message name="getNotifications">
    <part name="parameters" element="tns:getNotifications" />
  </message>
  <message name="getNotificationsResponse">
    <part name="parameters" element="tns:getNotificationsResponse" />
  </message>
  <message name="deleteNotifications">
    <part name="parameters" element="tns:deleteNotifications" />
  </message>
  <message name="deleteNotificationsResponse">
    <part name="parameters" element="tns:deleteNotificationsResponse" />
  </message>
  <portType name="ProfitbricksApiServicePortType">
    <operation name="createDataCenter">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createDataCenterRequest" message="tns:createDataCenter" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createDataCenterResponse" message="tns:createDataCenterResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createDataCenter/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateDataCenter">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateDataCenterRequest" message="tns:updateDataCenter" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateDataCenterResponse" message="tns:updateDataCenterResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateDataCenter/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="clearDataCenter">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/clearDataCenterRequest" message="tns:clearDataCenter" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/clearDataCenterResponse" message="tns:clearDataCenterResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/clearDataCenter/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteDataCenter">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteDataCenterRequest" message="tns:deleteDataCenter" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteDataCenterResponse" message="tns:deleteDataCenterResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteDataCenter/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllDataCenters">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllDataCentersRequest" message="tns:getAllDataCenters" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllDataCentersResponse" message="tns:getAllDataCentersResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllDataCenters/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="createServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createServerRequest" message="tns:createServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createServerResponse" message="tns:createServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateServerRequest" message="tns:updateServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateServerResponse" message="tns:updateServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteServerRequest" message="tns:deleteServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteServerResponse" message="tns:deleteServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="stopServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/stopServerRequest" message="tns:stopServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/stopServerResponse" message="tns:stopServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/stopServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="startServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/startServerRequest" message="tns:startServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/startServerResponse" message="tns:startServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/startServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="resetServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/resetServerRequest" message="tns:resetServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/resetServerResponse" message="tns:resetServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/resetServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getServerRequest" message="tns:getServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getServerResponse" message="tns:getServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllServers">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllServersRequest" message="tns:getAllServers" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllServersResponse" message="tns:getAllServersResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllServers/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllStorages">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllStoragesRequest" message="tns:getAllStorages" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllStoragesResponse" message="tns:getAllStoragesResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllStorages/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="createNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createNicRequest" message="tns:createNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createNicResponse" message="tns:createNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNicRequest" message="tns:deleteNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNicResponse" message="tns:deleteNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateNicRequest" message="tns:updateNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateNicResponse" message="tns:updateNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNicRequest" message="tns:getNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNicResponse" message="tns:getNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllNicRequest" message="tns:getAllNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllNicResponse" message="tns:getAllNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="setInternetAccess">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setInternetAccessRequest" message="tns:setInternetAccess" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setInternetAccessResponse" message="tns:setInternetAccessResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setInternetAccess/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="createStorage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createStorageRequest" message="tns:createStorage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createStorageResponse" message="tns:createStorageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createStorage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateStorage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateStorageRequest" message="tns:updateStorage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateStorageResponse" message="tns:updateStorageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateStorage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteStorage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteStorageRequest" message="tns:deleteStorage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteStorageResponse" message="tns:deleteStorageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteStorage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="connectStorageToServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/connectStorageToServerRequest" message="tns:connectStorageToServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/connectStorageToServerResponse" message="tns:connectStorageToServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/connectStorageToServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="disconnectStorageFromServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/disconnectStorageFromServerRequest" message="tns:disconnectStorageFromServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/disconnectStorageFromServerResponse" message="tns:disconnectStorageFromServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/disconnectStorageFromServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteImage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteImageRequest" message="tns:deleteImage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteImageResponse" message="tns:deleteImageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteImage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateImage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateImageRequest" message="tns:updateImage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateImageResponse" message="tns:updateImageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateImage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllImages">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllImagesRequest" message="tns:getAllImages" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllImagesResponse" message="tns:getAllImagesResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllImages/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="setImageOsType">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setImageOsTypeRequest" message="tns:setImageOsType" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setImageOsTypeResponse" message="tns:setImageOsTypeResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/setImageOsType/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="addRomDriveToServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addRomDriveToServerRequest" message="tns:addRomDriveToServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addRomDriveToServerResponse" message="tns:addRomDriveToServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addRomDriveToServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="removeRomDriveFromServer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeRomDriveFromServerRequest" message="tns:removeRomDriveFromServer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeRomDriveFromServerResponse" message="tns:removeRomDriveFromServerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeRomDriveFromServer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getImage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getImageRequest" message="tns:getImage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getImageResponse" message="tns:getImageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getImage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getDataCenter">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenterRequest" message="tns:getDataCenter" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenterResponse" message="tns:getDataCenterResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenter/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getDataCenterState">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenterStateRequest" message="tns:getDataCenterState" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenterStateResponse" message="tns:getDataCenterStateResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getDataCenterState/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getStorage">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getStorageRequest" message="tns:getStorage" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getStorageResponse" message="tns:getStorageResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getStorage/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="reservePublicIpBlock">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/reservePublicIpBlockRequest" message="tns:reservePublicIpBlock" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/reservePublicIpBlockResponse" message="tns:reservePublicIpBlockResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/reservePublicIpBlock/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="releasePublicIpBlock">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/releasePublicIpBlockRequest" message="tns:releasePublicIpBlock" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/releasePublicIpBlockResponse" message="tns:releasePublicIpBlockResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/releasePublicIpBlock/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="addPublicIpToNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addPublicIpToNicRequest" message="tns:addPublicIpToNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addPublicIpToNicResponse" message="tns:addPublicIpToNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addPublicIpToNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="removePublicIpFromNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removePublicIpFromNicRequest" message="tns:removePublicIpFromNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removePublicIpFromNicResponse" message="tns:removePublicIpFromNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removePublicIpFromNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllPublicIpBlocks">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllPublicIpBlocksRequest" message="tns:getAllPublicIpBlocks" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllPublicIpBlocksResponse" message="tns:getAllPublicIpBlocksResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllPublicIpBlocks/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getPublicIpBlock">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getPublicIpBlockRequest" message="tns:getPublicIpBlock" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getPublicIpBlockResponse" message="tns:getPublicIpBlockResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getPublicIpBlock/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="createLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createLoadBalancerRequest" message="tns:createLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createLoadBalancerResponse" message="tns:createLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateLoadBalancerRequest" message="tns:updateLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateLoadBalancerResponse" message="tns:updateLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteLoadBalancerRequest" message="tns:deleteLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteLoadBalancerResponse" message="tns:deleteLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getLoadBalancerRequest" message="tns:getLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getLoadBalancerResponse" message="tns:getLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllLoadBalancers">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllLoadBalancersRequest" message="tns:getAllLoadBalancers" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllLoadBalancersResponse" message="tns:getAllLoadBalancersResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllLoadBalancers/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="registerServersOnLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/registerServersOnLoadBalancerRequest" message="tns:registerServersOnLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/registerServersOnLoadBalancerResponse" message="tns:registerServersOnLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/registerServersOnLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deregisterServersOnLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deregisterServersOnLoadBalancerRequest" message="tns:deregisterServersOnLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deregisterServersOnLoadBalancerResponse" message="tns:deregisterServersOnLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deregisterServersOnLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="activateLoadBalancingOnServers">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateLoadBalancingOnServersRequest" message="tns:activateLoadBalancingOnServers" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateLoadBalancingOnServersResponse" message="tns:activateLoadBalancingOnServersResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateLoadBalancingOnServers/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deactivateLoadBalancingOnServers">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateLoadBalancingOnServersRequest" message="tns:deactivateLoadBalancingOnServers" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateLoadBalancingOnServersResponse" message="tns:deactivateLoadBalancingOnServersResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateLoadBalancingOnServers/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="addFirewallRulesToNic">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToNicRequest" message="tns:addFirewallRulesToNic" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToNicResponse" message="tns:addFirewallRulesToNicResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToNic/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="addFirewallRulesToLoadBalancer">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToLoadBalancerRequest" message="tns:addFirewallRulesToLoadBalancer" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToLoadBalancerResponse" message="tns:addFirewallRulesToLoadBalancerResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/addFirewallRulesToLoadBalancer/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="removeFirewallRules">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeFirewallRulesRequest" message="tns:removeFirewallRules" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeFirewallRulesResponse" message="tns:removeFirewallRulesResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/removeFirewallRules/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="activateFirewalls">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateFirewallsRequest" message="tns:activateFirewalls" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateFirewallsResponse" message="tns:activateFirewallsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/activateFirewalls/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deactivateFirewalls">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateFirewallsRequest" message="tns:deactivateFirewalls" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateFirewallsResponse" message="tns:deactivateFirewallsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deactivateFirewalls/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteFirewalls">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteFirewallsRequest" message="tns:deleteFirewalls" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteFirewallsResponse" message="tns:deleteFirewallsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteFirewalls/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getFirewall">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getFirewallRequest" message="tns:getFirewall" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getFirewallResponse" message="tns:getFirewallResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getFirewall/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllFirewalls">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllFirewallsRequest" message="tns:getAllFirewalls" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllFirewallsResponse" message="tns:getAllFirewallsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllFirewalls/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getAllSnapshots">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllSnapshotsRequest" message="tns:getAllSnapshots" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllSnapshotsResponse" message="tns:getAllSnapshotsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getAllSnapshots/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="updateSnapshot">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateSnapshotRequest" message="tns:updateSnapshot" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateSnapshotResponse" message="tns:updateSnapshotResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/updateSnapshot/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getSnapshot">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getSnapshotRequest" message="tns:getSnapshot" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getSnapshotResponse" message="tns:getSnapshotResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getSnapshot/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="createSnapshot">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createSnapshotRequest" message="tns:createSnapshot" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createSnapshotResponse" message="tns:createSnapshotResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/createSnapshot/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteSnapshot">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteSnapshotRequest" message="tns:deleteSnapshot" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteSnapshotResponse" message="tns:deleteSnapshotResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteSnapshot/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="rollbackSnapshot">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/rollbackSnapshotRequest" message="tns:rollbackSnapshot" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/rollbackSnapshotResponse" message="tns:rollbackSnapshotResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/rollbackSnapshot/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="getNotifications">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNotificationsRequest" message="tns:getNotifications" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNotificationsResponse" message="tns:getNotificationsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/getNotifications/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
    <operation name="deleteNotifications">
      <input wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNotificationsRequest" message="tns:deleteNotifications" />
      <output wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNotificationsResponse" message="tns:deleteNotificationsResponse" />
      <fault wsam:Action="http://ws.api.profitbricks.com/ProfitbricksApiServicePortType/deleteNotifications/Fault/ProfitbricksServiceFault" name="ProfitbricksServiceFault" message="tns:ProfitbricksServiceFault" />
    </operation>
  </portType>
  <binding name="ProfitbricksApiServicePortBinding" type="tns:ProfitbricksApiServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="createDataCenter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateDataCenter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="clearDataCenter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteDataCenter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllDataCenters">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="createServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="stopServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="startServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="resetServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllServers">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllStorages">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="createNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="setInternetAccess">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="createStorage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateStorage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteStorage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="connectStorageToServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="disconnectStorageFromServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteImage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateImage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllImages">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="setImageOsType">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="addRomDriveToServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeRomDriveFromServer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getImage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDataCenter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDataCenterState">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getStorage">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="reservePublicIpBlock">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="releasePublicIpBlock">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="addPublicIpToNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="removePublicIpFromNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllPublicIpBlocks">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getPublicIpBlock">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="createLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllLoadBalancers">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="registerServersOnLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deregisterServersOnLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="activateLoadBalancingOnServers">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deactivateLoadBalancingOnServers">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="addFirewallRulesToNic">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="addFirewallRulesToLoadBalancer">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeFirewallRules">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="activateFirewalls">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deactivateFirewalls">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFirewalls">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getFirewall">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllFirewalls">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAllSnapshots">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateSnapshot">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSnapshot">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="createSnapshot">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteSnapshot">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="rollbackSnapshot">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="getNotifications">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteNotifications">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ProfitbricksServiceFault">
        <soap:fault use="literal" name="ProfitbricksServiceFault" namespace="" />
      </fault>
    </operation>
  </binding>
  <service name="ProfitbricksApiService">
    <port name="ProfitbricksApiServicePort" binding="tns:ProfitbricksApiServicePortBinding">
      <soap:address location="https://api.profitbricks.com/1.3" />
    </port>
  </service>
</definitions>